{"version":3,"sources":["components/Input/Input.module.css","components/Button/Button.module.css","components/Todolist/Todolist.module.css","components/Button/Button.tsx","components/Input/Input.tsx","components/Checkbox/Checkbox.tsx","components/EditableSpan/EditableSpan.tsx","components/Todolist/Todolist.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Button","props","btnClassName","title","toLowerCase","filter","s","deleteBtn","addBtn","className","onClick","callBack","Input","useState","newTask","setNewTask","error","setError","addTask","trim","callback","input","errorBox","value","onChange","event","currentTarget","onKeyPress","key","errorTitle","Checkbox","type","e","changeTaskStatus","checked","isDone","EditableSpan","editMode","setEditMode","setTitle","onBlurHandler","changeTitle","autoFocus","onBlur","onDoubleClick","Todolist","removeTodoList","id","changeTodoListTitle","buttons","changeTodoListFilter","tasks","map","task","doneTask","changeTaskTitle","removeTask","App","todoListID_1","v1","todoListID_2","todoLists","setTodoList","setTasks","todoListID","taskID","t","tdl","getTasksForTodoList","tdlComponents","newTodoList","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3af3d15c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorTitle\":\"Input_errorTitle__2Hcr9\",\"errorBox\":\"Input_errorBox__1tWdl\",\"input\":\"Input_input__3PNbO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Button_filter__1es9U\",\"deleteBtn\":\"Button_deleteBtn__QJRDT\",\"addBtn\":\"Button_addBtn__2UwNH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"doneTask\":\"Todolist_doneTask__3AjOy\",\"buttons\":\"Todolist_buttons__X86vo\",\"title\":\"Todolist_title__1dF2V\"};","import React from 'react';\nimport s from './Button.module.css';\nimport {FilterValuesType} from \"../../App\";\n\ntype ButtonPropsType = {\n    callBack: () => void\n    title: string\n    filter?: FilterValuesType\n}\n\nexport const Button = (props: ButtonPropsType) => {\n    const btnClassName = (props.title.toLowerCase() === props.filter ? s.filter : '') + ' ' +\n        (props.title === 'x' ? s.deleteBtn : '') + ' ' +\n        (props.title === '+' ? s.addBtn : '')\n\n    return (\n        <button className={btnClassName} onClick={props.callBack}>{props.title}</button>\n    )\n}","import React, {ChangeEvent, KeyboardEvent, useState} from \"react\"\nimport {Button} from \"../Button/Button\";\nimport s from './Input.module.css';\n\ntype InputPropsType = {\n    callback: (task: string) => void\n}\n\nexport const Input = (props: InputPropsType) => {\n\n    let [newTask, setNewTask] = useState('');\n    let [error, setError] = useState(false)\n\n    const onChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\n        setNewTask(event.currentTarget.value);\n        setError(false)\n    }\n    const addTask = () => {\n        if (newTask.trim()) {\n            props.callback(newTask.trim())\n            setNewTask('')\n        } else {\n            setError(true)\n            setNewTask('')\n        }\n    }\n    const onCtrlPress = (event: KeyboardEvent<HTMLInputElement>) => {\n        if (event.key === 'Enter') {\n            addTask()\n        }\n    }\n\n    return (\n        <div>\n            <input className={ error ? `${s.input} ${s.errorBox}` : s.input } value={newTask} onChange={onChangeHandler} onKeyPress={onCtrlPress}/>\n            <Button callBack={addTask} title={'+'}/>\n            {error && <div className={s.errorTitle}>Title is required!</div>}\n        </div>\n    )\n}","import React from 'react';\nimport s from './Checkbox.module.css';\n\ntype CheckboxPropsType = {\n    isDone: boolean\n    changeTaskStatus: (isDone: boolean) => void\n}\n\nexport const Checkbox = (props: CheckboxPropsType) => {\n\n    const onChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n        props.changeTaskStatus(e.currentTarget.checked)\n    }\n\n    return (\n        <input type=\"checkbox\" onChange={onChangeHandler} checked={props.isDone}/>\n    )\n}","import React, {useState} from \"react\";\n\ntype EditableSpanPropsType = {\n    title: string\n    changeTitle: (title: string) => void\n}\n\nexport const EditableSpan = (props: EditableSpanPropsType) => {\n    const [editMode, setEditMode] = useState(false)\n    const [title, setTitle] = useState(props.title)\n\n    const onChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setTitle(e.currentTarget.value)\n    }\n\n    const onBlurHandler = () => {\n        setEditMode(false)\n        props.changeTitle(title)\n    }\n\n    const onEnter = (e: React.KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === \"Enter\") {\n            onBlurHandler()\n        }\n    }\n\n    return (\n        <>\n            {editMode ?\n                <input\n                    autoFocus\n                    onBlur={onBlurHandler}\n                    value={title}\n                    onChange={onChangeHandler}\n                    onKeyPress={onEnter}/>\n                :\n                <span onDoubleClick={() => setEditMode(true)}>{props.title}</span>\n            }\n        </>\n    )\n}","import React from 'react';\r\nimport {FilterValuesType, TaskType} from '../../App';\r\nimport {Button} from \"../Button/Button\";\r\nimport {Input} from \"../Input/Input\";\r\nimport s from './Todolist.module.css';\r\nimport {Checkbox} from \"../Checkbox/Checkbox\";\r\nimport {EditableSpan} from \"../EditableSpan/EditableSpan\";\r\n\r\ntype PropsType = {\r\n    id: string\r\n    title: string\r\n    filter: FilterValuesType\r\n    tasks: Array<TaskType>\r\n    removeTask: (taskId: string, todoListID: string) => void\r\n    addTask: (task: string, todoListID: string) => void\r\n    changeTaskStatus: (isDone: boolean, id: string, todoListID: string) => void\r\n    changeTodoListFilter: (filter: FilterValuesType, todoListID: string) => void\r\n    removeTodoList: (todoListID: string) => void\r\n    changeTodoListTitle: (title: string, todoListID: string) => void\r\n    changeTaskTitle: (title: string, id: string, todoListID: string) => void\r\n}\r\n\r\n\r\nexport function Todolist(props: PropsType) {\r\n\r\n    return <div>\r\n        <div className={s.title}>\r\n            <Button title={'x'} callBack={() => props.removeTodoList(props.id)}/>\r\n            <EditableSpan title={props.title} changeTitle={(title) => props.changeTodoListTitle(title, props.id)}/>\r\n        </div>\r\n\r\n        <div>\r\n            <Input callback={(title) => props.addTask(title, props.id)}/>\r\n        </div>\r\n\r\n        <div className={s.buttons}>\r\n            <Button filter={props.filter} title={'All'}\r\n                    callBack={() => props.changeTodoListFilter(\"all\", props.id)}/>\r\n            <Button filter={props.filter} title={'Active'}\r\n                    callBack={() => props.changeTodoListFilter(\"active\", props.id)}/>\r\n            <Button filter={props.filter} title={'Completed'}\r\n                    callBack={() => props.changeTodoListFilter(\"completed\", props.id)}/>\r\n        </div>\r\n\r\n        <ul>\r\n            {props.tasks.map(task => {\r\n                    const removeTask = () => { props.removeTask(task.id, props.id) }\r\n                    return (\r\n                        <li className={ task.isDone ? s.doneTask : '' } key={task.id}>\r\n                            <Checkbox changeTaskStatus={(isDone) => props.changeTaskStatus(isDone, task.id, props.id)}\r\n                                      isDone={task.isDone}/>\r\n                            <EditableSpan title={task.title} changeTitle={(title) => props.changeTaskTitle(title, task.id, props.id)}/>\r\n                            <Button title={'x'} callBack={removeTask}/>\r\n                        </li>\r\n                    )\r\n                }\r\n            )}\r\n        </ul>\r\n    </div>\r\n}\r\n","import React, {useState} from 'react';\nimport './App.css';\nimport {Todolist} from './components/Todolist/Todolist';\nimport {v1} from 'uuid';\nimport {Input} from \"./components/Input/Input\";\n\nexport type FilterValuesType = \"all\" | \"active\" | \"completed\";\n\nexport type TodoListType = {\n  id: string\n  title: string\n  filter: FilterValuesType\n}\n\nexport type TasksStateType = {\n  [id: string]: Array<TaskType>\n}\n\nexport type TaskType = {\n  id: string\n  title: string\n  isDone: boolean\n}\n\nfunction App() {\n\n  const todoListID_1 = v1()\n  const todoListID_2 = v1()\n\n  let [todoLists, setTodoList] = useState<TodoListType[]>([\n    {id: todoListID_1, title: 'What to learn?', filter: 'all'},\n    {id: todoListID_2, title: 'What to buy?', filter: 'all'},\n  ])\n\n  let [tasks, setTasks] = useState<TasksStateType>({\n    [todoListID_1]: [\n      {id: v1(), title: \"HTML&CSS\", isDone: true},\n      {id: v1(), title: \"JS\", isDone: true},\n      {id: v1(), title: \"ReactJS\", isDone: false},\n      {id: v1(), title: \"Rest API\", isDone: false},\n      {id: v1(), title: \"GraphQL\", isDone: false}\n    ],\n    [todoListID_2]: [\n      {id: v1(), title: \"Bear\", isDone: false},\n      {id: v1(), title: \"Milk\", isDone: false}\n    ]\n  })\n\n  const addTask = (task: string, todoListID: string) => {\n    const newTask = {id: v1(), title: task, isDone: false};\n    tasks[todoListID] = [newTask, ...tasks[todoListID]]\n    setTasks({...tasks});\n  }\n\n  const removeTask = (id: string, todoListID: string) => {\n    tasks[todoListID] = tasks[todoListID].filter(task => task.id !== id);\n    setTasks({...tasks});\n  }\n\n  const changeTaskStatus = (isDone: boolean, taskID: string, todoListID: string) => {\n    tasks[todoListID] = tasks[todoListID]\n        .map(t => t.id === taskID ? {...t, isDone} : t)\n    setTasks({...tasks})\n  }\n\n  const changeTaskTitle = (title: string, taskID: string, todoListID: string) => {\n    tasks[todoListID] = tasks[todoListID]\n        .map(t => t.id === taskID ? {...t, title} : t)\n    setTasks({...tasks})\n  }\n\n  const changeTodoListFilter = (filter: FilterValuesType, todoListID: string) => {\n    todoLists = todoLists\n        .map(tdl => tdl.id === todoListID ? {...tdl, filter} : tdl)\n    setTodoList([...todoLists])\n  }\n\n  const addTodoList = (title: string) => {\n    const todoListID = v1()\n    const newTodoList = {id: todoListID, title: title, filter: 'all'} as TodoListType\n    setTodoList([ ...todoLists, newTodoList] )\n    setTasks({ ...tasks, [todoListID]: [] })\n  }\n\n  const removeTodoList = (todoListID: string) => {\n    todoLists = todoLists.filter(tdl => tdl.id !== todoListID)\n    setTodoList([...todoLists])\n    delete tasks[todoListID]\n  }\n\n  const changeTodoListTitle = (title: string, todoListID: string) => {\n    todoLists = todoLists.map(tdl => tdl.id === todoListID ? {...tdl, title} : tdl)\n    setTodoList([...todoLists])\n  }\n\n  const getTasksForTodoList = (tdl: TodoListType) => {\n    switch (tdl.filter) {\n      case 'active':\n        return tasks[tdl.id].filter(t => !t.isDone)\n      case 'completed':\n        return tasks[tdl.id].filter(t => t.isDone)\n      default:\n        return tasks[tdl.id]\n    }\n  }\n\n  const tdlComponents = todoLists.map(tdl =>\n      <Todolist\n          key={tdl.id}\n          id={tdl.id}\n          title={tdl.title}\n          filter={tdl.filter}\n          tasks={getTasksForTodoList(tdl)}\n          removeTask={removeTask}\n          addTask={addTask}\n          changeTaskStatus={changeTaskStatus}\n          changeTodoListFilter={changeTodoListFilter}\n          removeTodoList={removeTodoList}\n          changeTodoListTitle={changeTodoListTitle}\n          changeTaskTitle={changeTaskTitle}/>)\n\n  return (\n      <div className=\"App\">\n        <Input callback={addTodoList}/>\n        <div className=\"tdls\"> {tdlComponents} </div>\n      </div>\n  );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}